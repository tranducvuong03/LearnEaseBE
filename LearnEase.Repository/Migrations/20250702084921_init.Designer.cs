// <auto-generated />
using System;
using LearnEase.Repository.EntityModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnEase.Repository.Migrations
{
    [DbContext(typeof(LearnEaseContext))]
<<<<<<<< HEAD:LearnEase.Repository/Migrations/20250702084921_init.Designer.cs
    [Migration("20250702084921_init")]
========
    [Migration("20250701133747_init")]
>>>>>>>> 9dbe2ed37d303b0b5f131a5611bb04baf7e5bee0:LearnEase.Repository/Migrations/20250701133747_init.Designer.cs
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Achievement", b =>
                {
                    b.Property<Guid>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AchievedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.AiLesson", b =>
                {
                    b.Property<Guid>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayIndex")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LessonId");

                    b.ToTable("AiLessons");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.AiLessonPart", b =>
                {
                    b.Property<Guid>("PartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AudioUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChoicesJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Prompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Skill")
                        .HasColumnType("int");

                    b.HasKey("PartId");

                    b.HasIndex("LessonId");

                    b.ToTable("AiLessonParts");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Dialect", b =>
                {
                    b.Property<Guid>("DialectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoiceSampleUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DialectId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Dialects");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Language", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Leaderboard", b =>
                {
                    b.Property<Guid>("LeaderboardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LeaderboardId");

                    b.HasIndex("UserId");

                    b.ToTable("Leaderboards");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Lesson", b =>
                {
                    b.Property<Guid>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DialectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IconUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LessonId");

                    b.HasIndex("DialectId");

                    b.HasIndex("TopicId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.LessonSpeaking", b =>
                {
                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LessonId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("LessonSpeakings");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.LessonVocabulary", b =>
                {
                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VocabId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LessonId", "VocabId");

                    b.HasIndex("VocabId");

                    b.ToTable("LessonVocabularies");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.SpeakingAttempt", b =>
                {
                    b.Property<Guid>("AttemptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AttemptedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<string>("Transcription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAudioUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttemptId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("UserId");

                    b.ToTable("SpeakingAttempts");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.SpeakingExercise", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DialectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Prompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleAudioUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.HasIndex("DialectId");

                    b.ToTable("SpeakingExercises");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Subscription", b =>
                {
                    b.Property<Guid>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Topic", b =>
                {
                    b.Property<Guid>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TopicId");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.TransactionLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderCode")
                        .HasColumnType("bigint");

                    b.Property<string>("PayOSOrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TransactionLogs");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.UserLessonAttempt", b =>
                {
                    b.Property<Guid>("AttemptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AttemptedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int>("Skill")
                        .HasColumnType("int");

                    b.Property<string>("UserAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttemptId");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("UserLessons");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.UserProgress", b =>
                {
                    b.Property<Guid>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastReviewed")
                        .HasColumnType("datetime2");

                    b.Property<int>("RepetitionCount")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VocabId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VocabularyItemVocabId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProgressId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("UserId");

                    b.HasIndex("VocabularyItemVocabId");

                    b.ToTable("UserProgresses");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.UserSettings", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("NotificationOn")
                        .HasColumnType("bit");

                    b.Property<float?>("PlaybackSpeed")
                        .HasColumnType("real");

                    b.Property<Guid?>("PreferredDialectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.VocabularyItem", b =>
                {
                    b.Property<Guid>("VocabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AudioUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DialectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DistractorsJson")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VocabId");

                    b.HasIndex("DialectId");

                    b.ToTable("VocabularyItems");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Achievement", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.User", "User")
                        .WithMany("Achievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.AiLessonPart", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.AiLesson", "Lesson")
                        .WithMany("Parts")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Dialect", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.Language", "Language")
                        .WithMany("Dialects")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Leaderboard", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.User", "User")
                        .WithMany("Leaderboards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Lesson", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.Dialect", "Dialect")
                        .WithMany()
                        .HasForeignKey("DialectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnEase.Repository.EntityModel.Topic", "Topic")
                        .WithMany("Lessons")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dialect");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.LessonSpeaking", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.SpeakingExercise", "SpeakingExercise")
                        .WithMany("LessonSpeakings")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LearnEase.Repository.EntityModel.Lesson", "Lesson")
                        .WithMany("LessonSpeakings")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("SpeakingExercise");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.LessonVocabulary", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.Lesson", "Lesson")
                        .WithMany("LessonVocabularies")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnEase.Repository.EntityModel.VocabularyItem", "VocabularyItem")
                        .WithMany("LessonVocabularies")
                        .HasForeignKey("VocabId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("VocabularyItem");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.SpeakingAttempt", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.SpeakingExercise", "Exercise")
                        .WithMany("Attempts")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnEase.Repository.EntityModel.User", "User")
                        .WithMany("SpeakingAttempts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.SpeakingExercise", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.Dialect", "Dialect")
                        .WithMany("SpeakingExercises")
                        .HasForeignKey("DialectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dialect");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Subscription", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.TransactionLogs", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.UserLessonAttempt", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.AiLesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnEase.Repository.EntityModel.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.UserProgress", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.SpeakingExercise", "SpeakingExercise")
                        .WithMany("UserProgresses")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LearnEase.Repository.EntityModel.User", "User")
                        .WithMany("UserProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LearnEase.Repository.EntityModel.VocabularyItem", "VocabularyItem")
                        .WithMany()
                        .HasForeignKey("VocabularyItemVocabId");

                    b.Navigation("SpeakingExercise");

                    b.Navigation("User");

                    b.Navigation("VocabularyItem");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.UserSettings", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.User", "User")
                        .WithOne("Settings")
                        .HasForeignKey("LearnEase.Repository.EntityModel.UserSettings", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.VocabularyItem", b =>
                {
                    b.HasOne("LearnEase.Repository.EntityModel.Dialect", "Dialect")
                        .WithMany("VocabularyItems")
                        .HasForeignKey("DialectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dialect");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.AiLesson", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Dialect", b =>
                {
                    b.Navigation("SpeakingExercises");

                    b.Navigation("VocabularyItems");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Language", b =>
                {
                    b.Navigation("Dialects");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Lesson", b =>
                {
                    b.Navigation("LessonSpeakings");

                    b.Navigation("LessonVocabularies");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.SpeakingExercise", b =>
                {
                    b.Navigation("Attempts");

                    b.Navigation("LessonSpeakings");

                    b.Navigation("UserProgresses");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.Topic", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Leaderboards");

                    b.Navigation("Settings");

                    b.Navigation("SpeakingAttempts");

                    b.Navigation("UserProgresses");
                });

            modelBuilder.Entity("LearnEase.Repository.EntityModel.VocabularyItem", b =>
                {
                    b.Navigation("LessonVocabularies");
                });
#pragma warning restore 612, 618
        }
    }
}
